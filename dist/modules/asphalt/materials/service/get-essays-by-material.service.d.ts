import { MaterialsRepository } from '../repository';
import { AdhesivenessRepository } from '../../essays/adhesiveness/repository';
import { ElongatedParticlesRepository } from '../../essays/elongatedParticles/repository';
import { AsphaltGranulometryRepository } from '../../essays/granulometry/repository';
import { SpecifyMassRepository } from '../../essays/specifyMass/repository';
import { ShapeIndexRepository } from '../../essays/shapeIndex/repository';
import { AbrasionRepository } from '../../essays/abrasion/repository';
import { MaterialDocument } from '../schemas';
import { Model } from 'mongoose';
import { SandEquivalentRepository } from '../../essays/sandEquivalent/repository';
import { AngularityRepository } from '../../essays/angularity/repository';
import { ViscosityRotationalRepository } from '../../essays/viscosityRotational/repository';
import { PenetrationRepository } from '../../essays/penetration/repository';
import { SofteningPointRepository } from '../../essays/softeningPoint/repository';
import { FlashPointRepository } from '../../essays/flashPoint/repository';
import { DuctilityRepository } from '../../essays/ductility/repository';
import { RtfoRepository } from '../../essays/rtfo/repository';
import { ElasticRecoveryRepository } from '../../essays/elasticRecovery/repository';
export declare class GetEssaysByMaterial_Service {
    private materialModel;
    private readonly materialsRepository;
    private readonly adhesivenessRepository;
    private readonly elongatedParticlesRepository;
    private readonly granulometryRepository;
    private readonly specificMassRepository;
    private readonly shapeIndexRepository;
    private readonly losAngelesAbrasionRepository;
    private readonly sandEquivalentRepository;
    private readonly angularityRepository;
    private readonly viscosityRotationalRepository;
    private readonly penetrationRepository;
    private readonly softeningPointRepository;
    private readonly flashPointRepository;
    private readonly ductilityRepository;
    private readonly rtfoRepository;
    private readonly elasticRecoveryRepository;
    private logger;
    constructor(materialModel: Model<MaterialDocument>, materialsRepository: MaterialsRepository, adhesivenessRepository: AdhesivenessRepository, elongatedParticlesRepository: ElongatedParticlesRepository, granulometryRepository: AsphaltGranulometryRepository, specificMassRepository: SpecifyMassRepository, shapeIndexRepository: ShapeIndexRepository, losAngelesAbrasionRepository: AbrasionRepository, sandEquivalentRepository: SandEquivalentRepository, angularityRepository: AngularityRepository, viscosityRotationalRepository: ViscosityRotationalRepository, penetrationRepository: PenetrationRepository, softeningPointRepository: SofteningPointRepository, flashPointRepository: FlashPointRepository, ductilityRepository: DuctilityRepository, rtfoRepository: RtfoRepository, elasticRecoveryRepository: ElasticRecoveryRepository);
    getEssaysByMaterial(material: any): Promise<any[]>;
    findTypeExperiment(typeMaterial: any): string[];
}
